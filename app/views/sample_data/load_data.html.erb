<div class="bg-gray-100 min-h-screen p-6 mt-16">
  <script>
    // Function to update all hidden FHIR URL fields with the main input value
    function updateFhirUrlFields() {
      const mainUrlField = document.getElementById('main_fhir_server_url');
      if (mainUrlField) {
        const urlValue = mainUrlField.value;
        document.querySelectorAll('.dynamic-fhir-url').forEach(field => {
          field.value = urlValue;
        });
      }
    }

    function initializeButtonState() {
      // Function to check if FHIR server URL is present and enable/disable buttons accordingly
      function updateButtonState() {
        const fhirServerUrl = document.getElementById('main_fhir_server_url').value;
        const loadButtons = document.querySelectorAll('.load-button');

        loadButtons.forEach(button => {
          if (fhirServerUrl.trim() === '') {
            button.disabled = true;
            button.classList.add('opacity-50', 'cursor-not-allowed');
            button.classList.remove('hover:bg-indigo-700', 'hover:bg-indigo-600');
          } else {
            button.disabled = false;
            button.classList.remove('opacity-50', 'cursor-not-allowed');
            if (button.classList.contains('bg-indigo-600')) {
              button.classList.add('hover:bg-indigo-700');
            } else {
              button.classList.add('hover:bg-indigo-600');
            }
          }
        });
      }

      // Add event listener to FHIR server URL input
      const fhirServerUrlInput = document.getElementById('main_fhir_server_url');
      if (fhirServerUrlInput) {
        fhirServerUrlInput.addEventListener('input', function() {
          updateButtonState();
          updateFhirUrlFields();
        });
        // Initial check
        updateButtonState();
        updateFhirUrlFields();
      }
    }

    // Run on both DOMContentLoaded and turbo:load to ensure it works in all navigation scenarios
    document.addEventListener('DOMContentLoaded', initializeButtonState);
    document.addEventListener('turbo:load', initializeButtonState);

    // Also run immediately in case the page is already loaded
    initializeButtonState();

    // Update FHIR URL fields before form submission
    document.querySelectorAll('form').forEach(form => {
      form.addEventListener('submit', function() {
        updateFhirUrlFields();
      });
    });

    // Function to dismiss a task
    function dismissTask(taskId, container) {
      fetch(`/task_statuses/${taskId}/dismiss`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        }
      }).then(response => {
        if (response.ok) {
          container.remove();
        } else {
          console.error('Failed to dismiss task');
        }
      }).catch(error => {
        console.error('Error dismissing task:', error);
      });
    }
  </script>
  <div class="max-w-7xl mx-auto">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-3xl font-bold text-indigo-700">Load Sample Data to FHIR Server</h1>
      <%= link_to "Back to Sample Data", sample_data_path, class: "inline-block px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors" %>
    </div>

    <!-- Task Status Container -->
    <div id="task-statuses" class="bg-white shadow-md rounded-lg p-6 mb-6">
      <h2 class="text-xl font-semibold text-gray-800 mb-4">Task Status</h2>

      <% # Dismiss all except the most recent task
         TaskStatus.dismiss_all_except_current

         # Get the most recent task
         task = TaskStatus.most_recent

         if task && task.status != TaskStatus::DISMISSED %>
        <div id="task-status-<%= task.task_id %>" class="task-status-item mb-4 p-4 border rounded
          <%= case task.status
              when 'pending' then 'bg-yellow-100 border-yellow-300'
              when 'running' then 'bg-blue-100 border-blue-300'
              when 'completed' then 'bg-green-100 border-green-300'
              when 'failed' then 'bg-red-100 border-red-300'
              else 'bg-gray-100 border-gray-300'
              end %>">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="font-semibold text-lg"><%= task.task_type %></h3>
              <p class="text-sm text-gray-600">
                <span class="font-medium">Folder:</span> <%= task.folder_path.gsub('sample_use_cases/', '') %>
              </p>
              <p class="text-sm text-gray-600">
                <span class="font-medium">Server:</span> <%= task.server_url %>
              </p>
            </div>
            <div class="text-right">
              <span class="inline-block px-2 py-1 text-xs font-semibold rounded <%= case task.status
                when 'pending' then 'bg-yellow-100 border-yellow-300'
                when 'running' then 'bg-blue-100 border-blue-300'
                when 'completed' then 'bg-green-100 border-green-300'
                when 'failed' then 'bg-red-100 border-red-300'
                else 'bg-gray-100 border-gray-300'
                end %>">
                <%= task.status.upcase %>
              </span>
            </div>
          </div>
          <div class="mt-2 text-sm">
            <p><%= task.message %></p>
          </div>
          <div class="mt-1 text-xs text-gray-500">
            Last updated: <%= task.updated_at.strftime('%Y-%m-%d %H:%M:%S') %>
          </div>
          <% if task.status == 'completed' || task.status == 'failed' %>
            <button class="mt-2 px-2 py-1 text-xs bg-gray-200 hover:bg-gray-300 rounded" onclick="dismissTask('<%= task.task_id %>', this.parentElement)">Dismiss</button>
          <% end %>
        </div>
      <% else %>
        <div class="text-center py-4 text-gray-500">
          <p>No active tasks</p>
        </div>
      <% end %>
    </div>

    <!-- FHIR Server URL Input -->
    <div class="bg-white shadow-md rounded-lg p-6 mb-6">
      <%= form_tag push_data_sample_data_path, method: :post, class: "space-y-4", data: { turbo: false } do %>
        <div>
          <label for="fhir_server_url" class="block text-sm font-medium text-gray-700 mb-1">FHIR Server URL</label>
          <%= text_field_tag :fhir_server_url, @fhir_server_url || session[:fhir_server_url], class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500", placeholder: "https://example.com/fhir", id: "main_fhir_server_url", list: "fhir-servers-list" %>

          <% if @fhir_servers.present? %>
            <datalist id="fhir-servers-list">
              <% @fhir_servers.each do |server| %>
                <option value="<%= server.base_url %>"><%= server.name %></option>
              <% end %>
            </datalist>
            <div class="mt-2 text-xs text-gray-500">
              <p>Select from saved servers or enter a custom URL</p>
            </div>
          <% end %>
        </div>

        <div class="mt-4">
          <%= submit_tag "Load All Data", name: "load_all", class: "load-button px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
          <%= hidden_field_tag :folder_path, "sample_use_cases" %>
        </div>
      <% end %>
    </div>

    <div class="bg-white shadow-md rounded-lg p-6">
      <h2 class="text-2xl font-semibold text-gray-800 mb-4">Available Use Cases</h2>

      <% if @use_cases.empty? %>
        <div class="text-center py-8 text-gray-500">
          <p>No sample data found. Please run the sample data scraper first.</p>
          <div class="mt-4">
            <code class="bg-gray-100 p-2 rounded">bundle exec rake sample_data:scrape</code>
          </div>
        </div>
      <% else %>
        <div class="space-y-6">
          <% @use_cases.each do |use_case_name, scenes| %>
            <div class="border border-gray-200 rounded-lg p-4">
              <h3 class="text-xl font-medium text-gray-800 mb-2"><%= use_case_name.titleize %></h3>

              <%= form_tag push_data_sample_data_path, method: :post, data: { turbo: false } do %>
                <%= hidden_field_tag :fhir_server_url, '', class: 'dynamic-fhir-url' %>
                <%= hidden_field_tag :folder_path, "sample_use_cases/#{use_case_name}" %>
                <%= submit_tag "Load All Scenes", class: "load-button px-3 py-1 bg-indigo-600 text-white text-sm rounded hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
              <% end %>

              <div class="mt-4 space-y-4">
                <% scenes.each do |scene_name, resource_types| %>
                  <div class="ml-4 border-l-2 border-gray-200 pl-4">
                    <div class="flex items-center justify-between">
                      <h4 class="text-lg font-medium text-gray-700"><%= scene_name.titleize %></h4>

                      <%= form_tag push_data_sample_data_path, method: :post, class: "inline", data: { turbo: false } do %>
                        <%= hidden_field_tag :fhir_server_url, '', class: 'dynamic-fhir-url' %>
                        <%= hidden_field_tag :folder_path, "sample_use_cases/#{use_case_name.parameterize.underscore}/#{scene_name}" %>
                        <%= submit_tag "Load Scene Data", class: "load-button px-3 py-1 bg-indigo-500 text-white text-sm rounded hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
                      <% end %>
                    </div>

                    <div class="mt-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
                      <% resource_types.each do |resource_type, files| %>
                        <div class="bg-gray-50 p-2 rounded">
                          <span class="font-medium text-gray-600"><%= resource_type %></span>
                          <span class="ml-2 text-gray-500 text-sm">(<%= files.length %> files)</span>
                        </div>
                      <% end %>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>

  </div>
</div>
